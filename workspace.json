{
  "version": 1,
  "projects": {
    "laamp": {
      "root": "libs/laamp",
      "sourceRoot": "libs/laamp/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/laamp/tsconfig.lib.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/laamp/**"
            ]
          }
        }
      }
    },
    "meatman": {
      "root": "apps/meatman",
      "sourceRoot": "apps/meatman/src",
      "projectType": "application",
      "prefix": "meatman",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/meatman",
            "main": "apps/meatman/src/main.ts",
            "tsConfig": "apps/meatman/tsconfig.app.json",
            "assets": [
              "apps/meatman/src/assets"
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/meatman/src/environments/environment.ts",
                  "with": "apps/meatman/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "meatman:build",
            "port": 5858
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/meatman/tsconfig.app.json",
              "apps/meatman/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/meatman/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/meatman/jest.config.js",
            "tsConfig": "apps/meatman/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "rx-osc": {
      "root": "libs/rx-osc",
      "sourceRoot": "libs/rx-osc/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/rx-osc/tsconfig.lib.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/rx-osc/**"
            ]
          }
        }
      }
    },
    "traffik": {
      "root": "libs/traffik",
      "sourceRoot": "libs/traffik/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/traffik/tsconfig.lib.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/traffik/**"
            ]
          }
        }
      }
    },
    "types": {
      "root": "libs/types",
      "sourceRoot": "libs/types/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/types/.eslintrc",
            "tsConfig": [
              "libs/types/tsconfig.lib.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/types/**"
            ]
          }
        }
      }
    },
    "laamp-ql": {
      "root": "libs/laamp-ql",
      "sourceRoot": "libs/laamp-ql/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/laamp-ql/tsconfig.lib.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/laamp-ql/**"
            ]
          }
        }
      }
    },
    "kmbx": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:interceptor": {
          "skipTests": true
        },
        "@nrwl/angular:class": {
          "skipTests": true
        },
        "@nrwl/angular:component": {
          "style": "scss",
          "skipTests": true
        },
        "@nrwl/angular:directive": {
          "skipTests": true
        },
        "@nrwl/angular:guard": {
          "skipTests": true
        },
        "@nrwl/angular:module": {
          "skipTests": true
        },
        "@nrwl/angular:pipe": {
          "skipTests": true
        },
        "@nrwl/angular:service": {
          "skipTests": true
        }
      },
      "root": "apps/kmbx",
      "sourceRoot": "apps/kmbx/src",
      "prefix": "kmbx",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/kmbx",
            "index": "apps/kmbx/src/index.html",
            "main": "apps/kmbx/src/main.ts",
            "polyfills": "apps/kmbx/src/polyfills.ts",
            "tsConfig": "apps/kmbx/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/kmbx/src/favicon.ico",
              "apps/kmbx/src/assets"
            ],
            "styles": [
              "apps/kmbx/src/styles.scss"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/kmbx/src/environments/environment.ts",
                  "with": "apps/kmbx/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "kmbx:build",
            "proxyConfig": "apps/kmbx/proxy.conf.json"
          },
          "configurations": {
            "production": {
              "browserTarget": "kmbx:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "kmbx:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/kmbx/tsconfig.app.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/kmbx/**"
            ]
          }
        }
      }
    },
    "kmbx-meats": {
      "projectType": "library",
      "root": "libs/kmbx-meats",
      "sourceRoot": "libs/kmbx-meats/src",
      "prefix": "meat",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/kmbx-meats/tsconfig.lib.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/kmbx-meats/**"
            ]
          }
        },
        "storybook": {
          "builder": "@nrwl/storybook:storybook",
          "options": {
            "uiFramework": "@storybook/angular",
            "port": 4400,
            "config": {
              "configFolder": "libs/kmbx-meats/.storybook"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        },
        "build-storybook": {
          "builder": "@nrwl/storybook:build",
          "options": {
            "uiFramework": "@storybook/angular",
            "outputPath": "dist/storybook/kmbx-meats",
            "config": {
              "configFolder": "libs/kmbx-meats/.storybook"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "weather": {
      "root": "apps/weather",
      "sourceRoot": "apps/weather/src",
      "projectType": "application",
      "prefix": "weather",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/weather",
            "main": "apps/weather/src/main.ts",
            "tsConfig": "apps/weather/tsconfig.app.json",
            "assets": [
              "apps/weather/src/assets"
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/weather/src/environments/environment.ts",
                  "with": "apps/weather/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "weather:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/weather/.eslintrc",
            "tsConfig": [
              "apps/weather/tsconfig.app.json",
              "apps/weather/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/weather/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/weather/jest.config.js",
            "tsConfig": "apps/weather/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "router-client": {
      "root": "apps/router/client",
      "sourceRoot": "apps/router/client/src",
      "projectType": "application",
      "prefix": "router-client",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/router/client",
            "main": "apps/router/client/src/main.ts",
            "tsConfig": "apps/router/client/tsconfig.app.json",
            "assets": [
              "apps/router/client/src/assets"
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/router/client/src/environments/environment.ts",
                  "with": "apps/router/client/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "router-client:build",
            "proxyConfig": "apps/router/client/proxy.conf.json"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/router/client/tsconfig.app.json",
              "apps/router/client/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/router/client/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/router/client/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "router-core": {
      "root": "libs/router/core",
      "sourceRoot": "libs/router/core/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/router/core/tsconfig.lib.json",
              "libs/router/core/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/router/core/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/router/core/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "router-server": {
      "root": "apps/router/server",
      "sourceRoot": "apps/router/server/src",
      "projectType": "application",
      "prefix": "router-server",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/router/server",
            "main": "apps/router/server/src/main.ts",
            "tsConfig": "apps/router/server/tsconfig.app.json",
            "assets": [
              "apps/router/server/src/assets"
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/router/server/src/environments/environment.ts",
                  "with": "apps/router/server/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "router-server:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/router/server/tsconfig.app.json",
              "apps/router/server/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/router/server/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/router/server/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "router-switch": {
      "root": "libs/router/switch",
      "sourceRoot": "libs/router/switch/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/router/switch/tsconfig.lib.json",
              "libs/router/switch/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/router/switch/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/router/switch/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "bifrost": {
      "root": "apps/bifrost",
      "sourceRoot": "apps/bifrost/src",
      "projectType": "application",
      "prefix": "cabaret",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/bifrost",
            "main": "apps/bifrost/src/main.ts",
            "tsConfig": "apps/bifrost/tsconfig.app.json",
            "assets": [
              "apps/bifrost/src/assets"
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/bifrost/src/environments/environment.ts",
                  "with": "apps/bifrost/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "bifrost:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/bifrost/tsconfig.app.json",
              "apps/bifrost/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/bifrost/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/bifrost/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/node"
  },
  "schematics": {
    "@nrwl/workspace": {
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/cypress": {
      "cypress-project": {
        "linter": "eslint"
      }
    },
    "@nrwl/react": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      },
      "storybook-configuration": {
        "linter": "eslint"
      }
    },
    "@nrwl/next": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/web": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/node": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/nx-plugin": {
      "plugin": {
        "linter": "eslint"
      }
    },
    "@nrwl/nest": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/express": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/angular:application": {
      "unitTestRunner": "none",
      "e2eTestRunner": "none"
    },
    "@nrwl/angular:library": {
      "unitTestRunner": "none"
    }
  },
  "defaultProject": "meatman"
}
